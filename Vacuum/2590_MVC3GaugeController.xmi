<?xml version="1.0" encoding="ASCII"?><pogoDsl:PogoSystem xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:pogoDsl="http://www.esrf.fr/tango/pogo/PogoDsl" xmi:version="2.0">
        <classes name="MVC3GaugeController"><description language="Python" description="# MVC3GaugeController Class Description:&#10;#&#10;# This device reads the pressure of the channels of a Vacom MVC-3&#10;# vacuum gauge controller&#10;#&#10;"><identification classFamily="Vacuum" platform="All Platforms" reference="" manufacturer="" contact="jmoldes@cells.es"/></description><attributes name="P2" attType="Scalar" rwType="READ" description=""><dataType xsi:type="pogoDsl:DoubleType"/><properties description=""/></attributes><attributes name="P3" attType="Scalar" rwType="READ" description=""><dataType xsi:type="pogoDsl:DoubleType"/><properties description=""/></attributes><attributes name="P1" attType="Scalar" rwType="READ" description=""><dataType xsi:type="pogoDsl:DoubleType"/><properties description=""/></attributes><deviceProperties name="UsedChannels" description="The channels we really want to read and manage (ignore the others). Channels may be discontinued (i.e 1 and 3). If not specified, all channels will be used"><type xsi:type="pogoDsl:StringArrayType"/></deviceProperties><deviceProperties name="AutoLockFrontPanel" description="Front panel lock at init. If not specified False is assumed."><type xsi:type="pogoDsl:BooleanType"/></deviceProperties><deviceProperties name="SerialDevice" description="The serial device to connect to the instrument. Configuration must be 19200 8N1 no software nor hardware flow control. Baudrate can be configured in the instrument if necessary (accepts 9600, 19200 and 38400) 0x0D (CR) charactermus mustbe used as newline. If using a C++ Serial device, 'newline' device property must be set to 13. If using a PySerial device, then the 'Terminator' attribute must be set to CR. There is an important difference between C++ and python serial devices. The former does have any function to write its ownnewline character when calling DevSerWriteString (so we have to do it) but the latter writes its own newline character when calling its Write command"><type xsi:type="pogoDsl:StringType"/></deviceProperties><deviceProperties name="ReadValidityPeriod" description="Time in seconds (may include decimals or be 0) while the last read values from the hardware are consider to be valid. This is done to try to minimize the accesses to the hardware. If not specified, 0 be used."><type xsi:type="pogoDsl:DoubleType"/></deviceProperties></classes></pogoDsl:PogoSystem>