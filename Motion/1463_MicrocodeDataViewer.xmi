<?xml version="1.0" encoding="ASCII"?><pogoDsl:PogoSystem xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:pogoDsl="http://www.esrf.fr/tango/pogo/PogoDsl" xmi:version="2.0">
<classes name="MicrocodeDataViewer"><description language="Cpp" description="This device allows to read/write microcode variables of a GalliBox using dynamic attributes defined in properties"><identification classFamily="Motion" contact="buteau" platform="" bus="" manufacturer="" reference=""><keyWords>- MotorControllers</keyWords></identification></description><commands name="State" description="This command gets the device state (stored in its device_state data member) and returns it to the caller."><argin><type xsi:type="pogoDsl:VoidType"/></argin><argout><type xsi:type="pogoDsl:StateType"/></argout></commands><commands name="Status" description="This command gets the device status (stored in its device_status data member) and returns it to the caller."><argin><type xsi:type="pogoDsl:VoidType"/></argin><argout><type xsi:type="pogoDsl:StringType"/></argout></commands><commands name="Start" description="Start the microcode"><argin><type xsi:type="pogoDsl:VoidType"/></argin><argout><type xsi:type="pogoDsl:VoidType"/></argout></commands><commands name="Abort" description="Abort the microcode execution. CAUTION : This function kills the running process, which is not the proper way to stop. USE WITH CARE"><argin><type xsi:type="pogoDsl:VoidType"/></argin><argout><type xsi:type="pogoDsl:VoidType"/></argout></commands><deviceProperties name="MicrocodeName" description="The GalliBox microcode name"><type xsi:type="pogoDsl:StringType"/></deviceProperties><deviceProperties name="ProcessId" description="The GalliBox microcode process id"><type xsi:type="pogoDsl:StringType"/></deviceProperties><deviceProperties name="GalilBoxDeviceName" description="The complete name of the GalilBox device"><type xsi:type="pogoDsl:StringType"/></deviceProperties><deviceProperties name="Data" description="Describe the data that should be read/write on the GalilBox. For each line the device will create an attribute with the specified name and type.&#10;&#9;&#9;&#9;Format :::&#10;&#9;&#9;&#9; : the name of the attribute that will be created&#10;&#9;&#9;&#9; : BOOLEAN, LONG, DOUBLE&#10;&#9;&#9;&#9; : READ or READ_WRITE&#10;&#9;&#9;&#9; : the name of the microcode var"><type xsi:type="pogoDsl:String[]Type"/></deviceProperties><deviceProperties name="ControlboxCommunicationCommand" description="The tango command to use to communicate with the control box.&#10;&#9;&#9;&#9;Microcode V1.0 : WriteRead&#10;&#9;&#9;&#9;Microcode V2.0 : ExecLowLevelCmd&#10;&#9;&#9;&#9;Default : ExecLowLevelCmd"><type xsi:type="pogoDsl:StringType"/></deviceProperties></classes></pogoDsl:PogoSystem>