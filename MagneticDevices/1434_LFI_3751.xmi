<?xml version="1.0" encoding="ASCII"?><pogoDsl:PogoSystem xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:pogoDsl="http://www.esrf.fr/tango/pogo/PogoDsl" xmi:version="2.0">
<classes name="LFI_3751"><description language="Cpp" description="this devices controls the NMR20 gaussmeter which measures a magnetic field"><identification classFamily="MagneticDevices" contact="xavela" platform="" bus="" manufacturer="" reference=""/></description><attributes name="temperaturePreset" attType="Scalar" description="temperature to reach. the unit depends on the probe used."><dataType xsi:type="pogoDsl:DoubleType"/></attributes><attributes name="temperatureMeasured" attType="Scalar" description="gets the temperature measured by the probe. the unit depends on\nthe probe type used"><dataType xsi:type="pogoDsl:DoubleType"/></attributes><attributes name="resistanceMeasured" attType="Scalar" description="gets the resistance measured by the probe."><dataType xsi:type="pogoDsl:DoubleType"/></attributes><attributes name="heaterPercent" attType="Scalar" description="provides information about the heating. this value is calculated\nas following expression:\n%heat = [ I(measured) / I(limit) ]*100"><dataType xsi:type="pogoDsl:DoubleType"/></attributes><attributes name="temperatureError" attType="Scalar" description="provides the interval error between the temperature preset\nand the measured temperature."><dataType xsi:type="pogoDsl:DoubleType"/></attributes><attributes name="coeffP" attType="Scalar" description="this is the  proportional gain parameter to set"><dataType xsi:type="pogoDsl:DoubleType"/></attributes><attributes name="coeffI" attType="Scalar" description="this is the Integrator parameter to set"><dataType xsi:type="pogoDsl:DoubleType"/></attributes><attributes name="coeffD" attType="Scalar" description="this is the Derivator parameter to set"><dataType xsi:type="pogoDsl:DoubleType"/></attributes><attributes name="outputCurrent" attType="Scalar" description="to enabled or disabled the output current"><dataType xsi:type="pogoDsl:BooleanType"/></attributes><commands name="State" description="This command gets the device state (stored in its device_state data member) and returns it to the caller."><argin><type xsi:type="pogoDsl:VoidType"/></argin><argout><type xsi:type="pogoDsl:StateType"/></argout></commands><commands name="Status" description="This command gets the device status (stored in its device_status data member) and returns it to the caller."><argin><type xsi:type="pogoDsl:VoidType"/></argin><argout><type xsi:type="pogoDsl:StringType"/></argout></commands><commands name="PidAutotuneS" description="This command gets the device status (stored in its device_status data member) and returns it to the caller."><argin><type xsi:type="pogoDsl:VoidType"/></argin><argout><type xsi:type="pogoDsl:VoidType"/></argout></commands><commands name="PidAutotuneD" description="to start a Disturbance Rejection Tuning to make an automatic PID setting. This method&#10;&#9;&#9;&#9;is valuable when your thermal load is exposed to varied environmental conditions, such&#10;&#9;&#9;&#9;as air currents or ambient temperature fluctuations. It also improves temperature stability&#10;&#9;&#9;&#9;in applications where the device being temperature controlled experiences significant power&#10;&#9;&#9;&#9;or heat transients, such as those found in pulsed laser diode applications."><argin><type xsi:type="pogoDsl:VoidType"/></argin><argout><type xsi:type="pogoDsl:VoidType"/></argout></commands><deviceProperties name="SerialProxyName" description="name of the serial line proxy device"><type xsi:type="pogoDsl:StringType"/></deviceProperties></classes></pogoDsl:PogoSystem>